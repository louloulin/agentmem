# Augment Agent 配置文件
# 版本: 2.0.0
# 描述: Augment Agent 的完整配置选项

# 基础配置
agent:
  name: "Augment Agent"
  version: "2.0.0"
  model: "claude-sonnet-4"
  provider: "anthropic"
  
# API 配置
api:
  endpoint: "https://api.augmentcode.com"
  version: "v2"
  timeout: 30
  retry_attempts: 3
  rate_limit:
    requests_per_minute: 1000
    concurrent_requests: 100

# 上下文引擎配置
context_engine:
  # 检索配置
  retrieval:
    max_context_length: 8192
    top_k_results: 10
    semantic_threshold: 0.7
    include_git_history: true
    include_dependencies: true
    
  # 索引配置
  indexing:
    auto_update: true
    update_interval: "5m"
    file_patterns:
      include: ["*.py", "*.js", "*.ts", "*.rs", "*.go", "*.java", "*.cpp", "*.c"]
      exclude: ["node_modules/*", "*.pyc", "__pycache__/*", "target/*", "build/*"]
    
  # 语义分析
  semantic_analysis:
    embedding_model: "all-MiniLM-L6-v2"
    chunk_size: 512
    chunk_overlap: 50
    language_detection: true

# 代码生成配置
code_generation:
  # 生成参数
  parameters:
    temperature: 0.2
    max_tokens: 2048
    top_p: 0.9
    frequency_penalty: 0.1
    presence_penalty: 0.1
    
  # 停止序列
  stop_sequences: ["```", "# END", "// END"]
  
  # 质量控制
  quality_control:
    min_confidence_score: 0.8
    enable_syntax_validation: true
    enable_security_scan: true
    enable_performance_analysis: true
    
  # 代码风格
  style_preferences:
    default_language: "python"
    indentation: "spaces"  # spaces | tabs
    line_length: 88
    naming_convention: "snake_case"  # snake_case | camelCase | PascalCase
    docstring_style: "google"  # google | numpy | sphinx
    type_hints: true
    error_handling: "explicit"  # explicit | implicit

# 智能功能配置
intelligence:
  # 自适应学习
  adaptive_learning:
    enabled: true
    learning_rate: 0.01
    feedback_weight: 0.8
    performance_weight: 0.2
    
  # 模式识别
  pattern_recognition:
    enabled: true
    pattern_database_size: 10000
    similarity_threshold: 0.85
    
  # 预测分析
  predictive_analysis:
    enabled: true
    prediction_horizon: "7d"
    confidence_threshold: 0.9

# 性能配置
performance:
  # 缓存配置
  cache:
    enabled: true
    type: "redis"  # memory | redis | memcached
    ttl: 3600  # seconds
    max_size: "1GB"
    
  # 并发配置
  concurrency:
    max_workers: 10
    queue_size: 1000
    timeout: 60
    
  # 资源限制
  resources:
    max_memory: "4GB"
    max_cpu_percent: 80
    max_disk_usage: "10GB"

# 安全配置
security:
  # 认证配置
  authentication:
    type: "api_key"  # api_key | oauth2 | jwt
    api_key_header: "X-API-Key"
    token_expiry: "24h"
    
  # 数据保护
  data_protection:
    encryption_at_rest: true
    encryption_in_transit: true
    pii_detection: true
    data_anonymization: true
    
  # 访问控制
  access_control:
    enable_rbac: true
    default_role: "developer"
    admin_users: ["admin@augmentcode.com"]
    
  # 审计日志
  audit:
    enabled: true
    log_level: "INFO"
    retention_days: 90
    include_request_body: false

# 监控配置
monitoring:
  # 指标收集
  metrics:
    enabled: true
    collection_interval: "30s"
    export_format: "prometheus"
    
  # 健康检查
  health_check:
    enabled: true
    endpoint: "/health"
    interval: "10s"
    timeout: "5s"
    
  # 告警配置
  alerting:
    enabled: true
    channels: ["email", "slack"]
    thresholds:
      response_time_p95: "1000ms"
      error_rate: "1%"
      cpu_usage: "80%"
      memory_usage: "85%"

# 集成配置
integrations:
  # IDE 集成
  ide:
    vscode:
      enabled: true
      extension_id: "augmentcode.augment-agent"
    jetbrains:
      enabled: true
      plugin_id: "com.augmentcode.plugin"
    vim:
      enabled: true
      plugin_name: "augment-agent.vim"
      
  # 版本控制
  version_control:
    git:
      enabled: true
      auto_commit_suggestions: false
      branch_analysis: true
      
  # CI/CD
  cicd:
    github_actions:
      enabled: true
      workflow_file: ".github/workflows/augment-agent.yml"
    jenkins:
      enabled: false
      
  # 外部服务
  external_services:
    github:
      enabled: true
      api_token: "${GITHUB_TOKEN}"
    gitlab:
      enabled: false
    bitbucket:
      enabled: false

# 插件配置
plugins:
  # 代码质量插件
  - name: "code_quality_checker"
    enabled: true
    config:
      severity_threshold: "medium"
      auto_fix: false
      rules:
        - "security_vulnerabilities"
        - "performance_issues"
        - "maintainability_issues"
        
  # 代码格式化插件
  - name: "code_formatter"
    enabled: true
    config:
      formatter: "black"  # black | prettier | rustfmt
      line_length: 88
      auto_format: true
      
  # 文档生成插件
  - name: "documentation_generator"
    enabled: true
    config:
      format: "sphinx"  # sphinx | mkdocs | gitbook
      include_examples: true
      auto_update: true
      
  # 测试生成插件
  - name: "test_generator"
    enabled: true
    config:
      framework: "pytest"  # pytest | unittest | jest
      coverage_target: 80
      include_edge_cases: true

# 实验性功能
experimental:
  # 多模态支持
  multimodal:
    enabled: false
    image_analysis: false
    audio_processing: false
    
  # 量子计算支持
  quantum_computing:
    enabled: false
    simulator: "qiskit"
    
  # 边缘计算
  edge_computing:
    enabled: false
    local_model_path: "/opt/augment-agent/models"

# 日志配置
logging:
  level: "INFO"  # DEBUG | INFO | WARNING | ERROR
  format: "json"  # json | text
  output: "file"  # console | file | both
  file_path: "/var/log/augment-agent/agent.log"
  max_file_size: "100MB"
  backup_count: 5
  
# 开发配置
development:
  debug_mode: false
  hot_reload: false
  profiling: false
  mock_external_apis: false
  
# 生产配置
production:
  high_availability: true
  load_balancing: true
  auto_scaling: true
  disaster_recovery: true
  backup_strategy: "daily"
